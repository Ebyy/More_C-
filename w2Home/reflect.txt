/* Put Your Signature 
============================================================================ 
Name        : reflect.txt 
Author      : Eberechi Ogunedo 
Email       : eokengwu@myseneca.ca 
Student #   : 117277160 
Course Code : OOP345 
Section     : SCC 
Date        : May 28, 2019 
Workshop    : Workshop 2 - Home 
============================================================================ 

*/ 

WORKSHOP Reflection: 

What I have learned: 

- How to write more efficient code by learning more ways on 
how to reduce repeatition in my code by putting more effort into 
structuring my code by applying the liskov substitution principle and taking 
advantage of templates and how compilers uses them, to reduce the amount of 
code I write and make more efficient use of what is already written. 
For example I call the overloaded =operator in my copy constructor 
and my move constructor which is a more efficient way of coding.

- Also learned how having access to the entire object through pointers affect
 copy and move semantic of objects like in the copy we had to execute a 
allocate dynamic memory each time we copied and this took time but 
in the case of a move the compiler just manipulates where the pointer 
is pointing kind of like when executing a swap so it barely takes any time.


QUIZ Reflection: 

Q2: 

Wrong Answer: Didn’t include an example of a pure virtual after the definition 

Right Answer: virtual void display()const = 0; 

Q3: 

Wrong Answer: Shape a = new Cube(); 
              Shape b = new Sphere(); 

Right Answer:   Shape* a = new Cube(); 
                Shape* b = new Sphere(); 

Q5: 

Wrong Answer: blank(didn’t get to it) 

Right Answer : 15 

 

 

 